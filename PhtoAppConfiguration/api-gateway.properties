server.port=8080
spring.application.name=api-gateway
eureka.client.service-url.defaultZone= http://pankaj:abc@localhost:8010/eureka
# ---- Automatically routing configuration 
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#------- Automatically routing End
# Manual Routing Configuration for users microservice
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://users-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
# URL REWRITE PATH
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-service/ping/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-service/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[0].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[1].id=users-service
spring.cloud.gateway.routes[1].uri=lb://users-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-service/users
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-service/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id=users-service-login
spring.cloud.gateway.routes[2].uri=lb://users-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-service/login
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-service/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id=users-service-get-update-delete
spring.cloud.gateway.routes[3].uri=lb://users-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-service/users/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,PUT,DELETE
spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[3].filters[2]=RewritePath=/users-service/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[4].id=album-service-status-check
spring.cloud.gateway.routes[4].uri=lb://albums-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/albums-service/albums/status/check
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
#spring.cloud.gateway.routes[4].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/albums-service/(?<segment>.*), /$\{segment}
#spring.cloud.gateway.routes[4].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[5].id=albums-service-get-album-by-user-id
spring.cloud.gateway.routes[5].uri=lb://albums-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/albums-service/albums/user/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[5].filters[2]=RewritePath=/albums-service/(?<segment1>.*)/(?<segment2>.*), /$\{segment1}/$\{segment2}




token.secret=djahsd687d7sadh3e389xjjdk93
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway,beans,health,routes,httptrace
api.gateway.actuator.path=/actuator/*


